{"version":3,"sources":["utils/stopwords.js","utils/functions.js","utils/wordcloud-options.js","App.js","index.js"],"names":["stopwords","generateWordCloudData","postData","wordsMap","sortedWordsMap","Object","keys","map","key","text","value","sort","a","b","total","sortByCount","wordsArray","forEach","hasOwnProperty","createWordMap","filter","dataItem","undefined","console","log","toLowerCase","replace","title","res","words","split","i","length","includes","push","join","removeStopWords","options","colors","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","App","state","redditData","redditSelect","error","loading","onChange","e","setState","target","name","onSubmit","preventDefault","axios","get","posts","data","children","combinedPosts","post","subredditResults","commentsData","comments","combinedComments","comment","body","userCommentsResults","className","this","type","placeholder","disabled","href","rel","Component","ReactDOM","render","document","getElementById"],"mappings":"6YAAaA,EAAY,CACvB,IACA,QACA,QACA,SACA,QACA,QACA,UACA,MACA,SACA,QACA,QACA,UACA,OACA,WACA,SACA,QACA,KACA,KACA,MACA,UACA,MACA,UACA,SACA,WACA,WACA,MACA,OACA,QACA,SACA,KACA,MACA,QACA,SACA,OACA,KACA,OACA,IACA,OACA,SACA,UACA,QACA,KACA,SACA,UACA,SACA,UACA,OACA,SACA,QACA,SACA,QACA,SACA,OACA,SACA,UACA,MACA,OACA,MACA,KACA,IACA,OACA,MACA,SACA,OACA,QACA,UACA,YACA,QACA,UACA,OACA,QACA,IACA,MACA,SACA,YACA,cACA,KACA,OACA,OACA,OACA,OACA,SACA,UACA,QACA,SACA,IACA,OACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,OACA,SACA,OACA,QACA,YACA,WACA,aACA,aACA,IACA,OACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,QACA,QACA,MACA,OACA,OACA,OACA,QACA,UACA,YACA,aACA,WACA,IACA,OACA,UACA,YACA,MACA,OACA,OACA,QACA,QACA,KACA,QACA,OACA,QACA,MACA,QACA,UACA,WACA,QACA,UACA,WACA,SACA,IACA,MACA,MACA,OACA,SACA,KACA,MACA,OACA,UACA,OACA,OACA,OACA,SACA,UACA,MACA,UACA,MACA,MACA,UACA,IACA,MACA,KACA,KACA,YACA,KACA,WACA,aACA,caACA,WACA,UACA,WACA,MACA,OACA,IACA,QACA,IACA,SACA,SACA,QACA,QACA,OACA,QACA,IACA,OACA,OACA,MACA,MACA,OACA,SACA,UACA,MACA,OACA,SACA,UACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,SACA,UACA,QACA,OACA,QACA,QACA,QACA,UACA,WACA,KACA,OACA,WACA,UACA,YACA,YACA,QACA,SACA,QACA,QACA,OACA,OACA,IACA,OACA,QACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,YACA,QACA,OACA,QACA,SACA,QACA,SACA,OACA,QACA,SACA,UACA,WACA,QACA,UACA,OACA,KACA,QACA,WACA,MACA,OACA,SACA,OACA,SACA,UACA,QACA,MACA,IACA,QACA,QACA,KACA,OACA,KACA,MACA,OACA,OACA,IACA,OACA,IACA,OACA,SACA,UACA,QACA,MACA,MACA,OACA,KACA,OACA,QACA,OACA,OACA,OACA,OACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,MACA,OACA,OACA,SACA,UACA,OACA,SACA,UACA,QACA,QACA,IACA,IACA,OACA,QACA,MACA,MACA,QACA,UACA,WACA,OACA,QACA,IACA,IACA,KACA,KACA,SACA,KACA,MACA,OACA,YACA,MACA,OACA,QACA,WACA,aACA,KACA,MACA,MACA,UACA,MACA,MACA,OACA,UACA,KACA,MACA,SACA,OACA,OACA,QACA,SACA,aACA,OACA,QACA,MACA,OACA,OACA,OACA,QACA,QACA,KACA,KACA,MACA,MACA,OACA,KACA,OACA,QACA,OACA,MACA,MACA,SACA,KACA,OACA,MACA,QACA,IACA,KACA,MACA,MACA,MACA,KACA,KACA,UACA,KACA,QACA,QACA,KACA,KACA,KACA,MACA,OACA,QACA,UACA,UACA,OACA,UACA,SACA,SACA,QACA,QACA,QACA,KACA,OACA,KACA,OACA,KACA,MACA,KACA,MACA,OACA,QACA,QACA,UACA,OACA,OACA,OACA,QACA,OACA,QACA,MACA,MACA,MACA,MACA,OACA,OACA,MACA,OACA,OACA,QACA,OACA,OACA,KACA,MACA,MACA,OACA,MACA,OACA,KACA,OACA,MACA,OACA,IACA,IACA,MACA,OACA,OACA,MACA,SACA,OCpfK,SAASC,EAAsBC,GASpC,OA1BF,SAAqBC,GAEnB,IAAIC,EAAiB,GAWrB,OAVAA,EAAiBC,OAAOC,KAAKH,GAAUI,KAAI,SAASC,GAClD,MAAO,CACLC,KAAMD,EACNE,MAAOP,EAASK,QAILG,MAAK,SAASC,EAAGC,GAC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","file":"static/js/main.3af20b58.chunk.js","sourcesContent":["export const stopwords = [\n  'a',\n  'about',\n  'above',\n  'across',\n  'after',\n  'again',\n  'against',\n  'all',\n  'almost',\n  'alone',\n  'along',\n  'already',\n  'also',\n  'although',\n  'always',\n  'among',\n  'an',\n  'am',\n  'and',\n  'another',\n  'any',\n  'anybody',\n  'anyone',\n  'anything',\n  'anywhere',\n  'are',\n  'area',\n  'areas',\n  'around',\n  'as',\n  'ask',\n  'asked',\n  'asking',\n  'asks',\n  'at',\n  'away',\n  'b',\n  'back',\n  'backed',\n  'backing',\n  'backs',\n  'be',\n  'became',\n  'because',\n  'become',\n  'becomes',\n  'been',\n  'before',\n  'began',\n  'behind',\n  'being',\n  'beings',\n  'best',\n  'better',\n  'between',\n  'big',\n  'both',\n  'but',\n  'by',\n  'c',\n  'came',\n  'can',\n  'cannot',\n  'case',\n  'cases',\n  'certain',\n  'certainly',\n  'clear',\n  'clearly',\n  'come',\n  'could',\n  'd',\n  'did',\n  'differ',\n  'different',\n  'differently',\n  'do',\n  'does',\n  'done',\n  'down',\n  'down',\n  'downed',\n  'downing',\n  'downs',\n  'during',\n  'e',\n  'each',\n  'early',\n  'either',\n  'end',\n  'ended',\n  'ending',\n  'ends',\n  'enough',\n  'even',\n  'evenly',\n  'ever',\n  'every',\n  'everybody',\n  'everyone',\n  'everything',\n  'everywhere',\n  'f',\n  'face',\n  'faces',\n  'fact',\n  'facts',\n  'far',\n  'felt',\n  'few',\n  'find',\n  'finds',\n  'first',\n  'for',\n  'four',\n  'from',\n  'full',\n  'fully',\n  'further',\n  'furthered',\n  'furthering',\n  'furthers',\n  'g',\n  'gave',\n  'general',\n  'generally',\n  'get',\n  'gets',\n  'give',\n  'given',\n  'gives',\n  'go',\n  'going',\n  'good',\n  'goods',\n  'got',\n  'great',\n  'greater',\n  'greatest',\n  'group',\n  'grouped',\n  'grouping',\n  'groups',\n  'h',\n  'had',\n  'has',\n  'have',\n  'having',\n  'he',\n  'her',\n  'here',\n  'herself',\n  'high',\n  'high',\n  'high',\n  'higher',\n  'highest',\n  'him',\n  'himself',\n  'his',\n  'how',\n  'however',\n  'i',\n  \"i'm\",\n  'im',\n  'if',\n  'important',\n  'in',\n  'interest',\n  'interested',\n  'interesting',\n  'interests',\n  'into',\n  'is',\n  'it',\n  'its',\n  'itself',\n  'j',\n  'just',\n  'k',\n  'keep',\n  'keeps',\n  'kind',\n  'knew',\n  'know',\n  'known',\n  'knows',\n  'l',\n  'large',\n  'largely',\n  'last',\n  'later',\n  'latest',\n  'least',\n  'less',\n  'let',\n  'lets',\n  'like',\n  'likely',\n  'long',\n  'longer',\n  'longest',\n  'm',\n  'made',\n  'make',\n  'making',\n  'man',\n  'many',\n  'may',\n  'me',\n  'member',\n  'members',\n  'men',\n  'might',\n  'more',\n  'most',\n  'mostly',\n  'mr',\n  'mrs',\n  'much',\n  'must',\n  'my',\n  'myself',\n  'n',\n  'necessary',\n  'need',\n  'needed',\n  'needing',\n  'needs',\n  'never',\n  'new',\n  'new',\n  'newer',\n  'newest',\n  'next',\n  'no',\n  'nobody',\n  'non',\n  'noone',\n  'not',\n  'nothing',\n  'now',\n  'nowhere',\n  'number',\n  'numbers',\n  'o',\n  'of',\n  'off',\n  'often',\n  'old',\n  'older',\n  'oldest',\n  'on',\n  'once',\n  'one',\n  'only',\n  'open',\n  'opened',\n  'opening',\n  'opens',\n  'or',\n  'order',\n  'ordered',\n  'ordering',\n  'orders',\n  'other',\n  'others',\n  'our',\n  'out',\n  'over',\n  'p',\n  'part',\n  'parted',\n  'parting',\n  'parts',\n  'per',\n  'perhaps',\n  'place',\n  'places',\n  'point',\n  'pointed',\n  'pointing',\n  'points',\n  'possible',\n  'present',\n  'presented',\n  'presenting',\n  'presents',\n  'problem',\n  'problems',\n  'put',\n  'puts',\n  'q',\n  'quite',\n  'r',\n  'rather',\n  'really',\n  'right',\n  'right',\n  'room',\n  'rooms',\n  's',\n  'said',\n  'same',\n  'saw',\n  'say',\n  'says',\n  'second',\n  'seconds',\n  'see',\n  'seem',\n  'seemed',\n  'seeming',\n  'seems',\n  'sees',\n  'several',\n  'shall',\n  'she',\n  'should',\n  'show',\n  'showed',\n  'showing',\n  'shows',\n  'side',\n  'sides',\n  'since',\n  'small',\n  'smaller',\n  'smallest',\n  'so',\n  'some',\n  'somebody',\n  'someone',\n  'something',\n  'somewhere',\n  'state',\n  'states',\n  'still',\n  'still',\n  'such',\n  'sure',\n  't',\n  'take',\n  'taken',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'therefore',\n  'these',\n  'they',\n  'thing',\n  'things',\n  'think',\n  'thinks',\n  'this',\n  'those',\n  'though',\n  'thought',\n  'thoughts',\n  'three',\n  'through',\n  'thus',\n  'to',\n  'today',\n  'together',\n  'too',\n  'took',\n  'toward',\n  'turn',\n  'turned',\n  'turning',\n  'turns',\n  'two',\n  'u',\n  'under',\n  'until',\n  'up',\n  'upon',\n  'us',\n  'use',\n  'used',\n  'uses',\n  'v',\n  'very',\n  'w',\n  'want',\n  'wanted',\n  'wanting',\n  'wants',\n  'was',\n  'way',\n  'ways',\n  'we',\n  'well',\n  'wells',\n  'went',\n  'were',\n  'what',\n  'when',\n  'where',\n  'whether',\n  'which',\n  'while',\n  'who',\n  'whole',\n  'whose',\n  'why',\n  'will',\n  'with',\n  'within',\n  'without',\n  'work',\n  'worked',\n  'working',\n  'works',\n  'would',\n  'x',\n  'y',\n  'year',\n  'years',\n  'yet',\n  'you',\n  'young',\n  'younger',\n  'youngest',\n  'your',\n  'yours',\n  'z',\n  'i',\n  'me',\n  'my',\n  'myself',\n  'we',\n  'our',\n  'ours',\n  'ourselves',\n  'you',\n  'your',\n  'yours',\n  'yourself',\n  'yourselves',\n  'he',\n  'him',\n  'his',\n  'himself',\n  'she',\n  'her',\n  'hers',\n  'herself',\n  'it',\n  'its',\n  'itself',\n  'they',\n  'them',\n  'their',\n  'theirs',\n  'themselves',\n  'what',\n  'which',\n  'who',\n  'whom',\n  'this',\n  'that',\n  'these',\n  'those',\n  'am',\n  'is',\n  'are',\n  'was',\n  'were',\n  'be',\n  'been',\n  'being',\n  'have',\n  'has',\n  'had',\n  'having',\n  'do',\n  'does',\n  'did',\n  'doing',\n  'a',\n  'an',\n  'the',\n  'and',\n  'but',\n  'if',\n  'or',\n  'because',\n  'as',\n  'until',\n  'while',\n  'of',\n  'at',\n  'by',\n  'for',\n  'with',\n  'about',\n  'against',\n  'between',\n  'into',\n  'through',\n  'during',\n  'before',\n  'after',\n  'above',\n  'below',\n  'to',\n  'from',\n  'up',\n  'down',\n  'in',\n  'out',\n  'on',\n  'off',\n  'over',\n  'under',\n  'again',\n  'further',\n  'then',\n  'once',\n  'here',\n  'there',\n  'when',\n  'where',\n  'why',\n  'how',\n  'all',\n  'any',\n  'both',\n  'each',\n  'few',\n  'more',\n  'most',\n  'other',\n  'some',\n  'such',\n  'no',\n  'nor',\n  'not',\n  'only',\n  'own',\n  'same',\n  'so',\n  'than',\n  'too',\n  'very',\n  's',\n  't',\n  'can',\n  'will',\n  'just',\n  'don',\n  'should',\n  'now'\n];\n","import { stopwords } from './stopwords';\n\n//Convert all text to lowercase & remove punctuation marks\nfunction titleCleanUp(data) {\n  const filteredData = data.filter(dataItem => dataItem !== undefined);\n  const cleanData = filteredData.map(dataItem => {\n    console.log(dataItem);\n    return dataItem\n      .toLowerCase()\n      .replace(\n        /(~|`|!|@|#|$|%|^|&|\\*|\\(|\\)|{|}|\\[|\\]|;|:|\\\"|'|<|,|\\.|>|\\?|\\/|\\\\|\\||-|_|\\+|=)/g,\n        ''\n      );\n  });\n  return cleanData;\n}\n\n//Remove stop words (Example: I, the, and, etc)\nfunction removeStopWords(title) {\n  const res = [];\n  const words = title.split(' ');\n  for (let i = 0; i < words.length; i++) {\n    if (!stopwords.includes(words[i])) {\n      res.push(words[i]);\n    }\n  }\n  return res.join(' ');\n}\n\n//Count words\nfunction createWordMap(wordsArray) {\n  const wordsMap = {};\n  wordsArray.forEach(function(key) {\n    if (wordsMap.hasOwnProperty(key)) {\n      wordsMap[key]++;\n    } else {\n      wordsMap[key] = 1;\n    }\n  });\n  return wordsMap;\n}\n\nfunction sortByCount(wordsMap) {\n  // sort by count in descending order\n  let sortedWordsMap = [];\n  sortedWordsMap = Object.keys(wordsMap).map(function(key) {\n    return {\n      text: key,\n      value: wordsMap[key]\n    };\n  });\n\n  sortedWordsMap.sort(function(a, b) {\n    return b.total - a.total;\n  });\n  return sortedWordsMap;\n}\n\n//Combine functions\nexport function generateWordCloudData(postData) {\n  //Clean, combine & sort posts\n  const cleanTitles = titleCleanUp(postData);\n  const stopWordsRemoved = cleanTitles.map(title => {\n    return removeStopWords(title);\n  });\n  const combinedTitles = stopWordsRemoved.join(' ').split(' ');\n  const wordMap = createWordMap(combinedTitles);\n  //Final step - sort by count\n  return sortByCount(wordMap);\n}\n","export const options = {\n  colors: ['#1A202C', '#2D3748', '#4A5568', '#718096', '#A0AEC0'],\n  enableTooltip: true,\n  deterministic: false,\n  fontFamily: 'oswald',\n  fontSizes: [24, 96],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotations: 2,\n  rotationAngles: [0, 90],\n  scale: 'linear',\n  spiral: 'rectangular',\n  transitionDuration: 1000\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport ReactWordcloud from 'react-wordcloud';\nimport axios from 'axios';\nimport { generateWordCloudData } from './utils/functions';\nimport { options } from './utils/wordcloud-options';\n\nclass App extends Component {\n  state = {\n    words: '',\n    redditData: '',\n    redditSelect: 'subreddit',\n    error: false,\n    loading: false\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state.redditSelect);\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.state.redditSelect === 'subreddit') {\n      try {\n        //fetch posts\n        const postData = await axios.get(\n          `https://www.reddit.com/r/${this.state.redditData}.json`\n        );\n        const posts = postData.data.data.children;\n        const combinedPosts = [];\n\n        posts.forEach(function(post) {\n          combinedPosts.push(post.data.title);\n        });\n\n        const subredditResults = generateWordCloudData(combinedPosts);\n\n        this.setState({\n          loading: false,\n          error: false,\n          words: subredditResults\n        });\n      } catch (err) {\n        console.log(err);\n        this.setState({ loading: false, error: true });\n      }\n    } else if (this.state.redditSelect === 'user') {\n      try {\n        //fetch user comments\n        const commentsData = await axios.get(\n          `https://www.reddit.com/user/${this.state.redditData}.json`\n        );\n        const comments = commentsData.data.data.children;\n\n        const combinedComments = [];\n        comments.forEach(function(comment) {\n          combinedComments.push(comment.data.body);\n        });\n\n        const userCommentsResults = generateWordCloudData(combinedComments);\n\n        this.setState({\n          loading: false,\n          error: false,\n          words: userCommentsResults\n        });\n      } catch (err) {\n        console.log(err);\n        this.setState({ loading: false, error: true });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <h1>\n            {this.state.redditSelect === 'subreddit'\n              ? 'Subreddit Wordcloud Generator'\n              : 'Reddit User Wordcloud Generator'}\n          </h1>\n          <p className=\"subtitle\">\n            {this.state.redditSelect === 'subreddit'\n              ? 'Submit a subreddit and get a visual of the most commonly used words in their recent posts'\n              : 'Submit a user and get a visual of the most commonly used words in their recent comments'}\n          </p>\n          <form onSubmit={this.onSubmit}>\n            <select\n              name=\"redditSelect\"\n              className=\"reddit-select\"\n              value={this.state.redditSelect}\n              onChange={this.onChange}\n            >\n              <option value=\"subreddit\">Subreddit</option>\n              <option value=\"user\">Reddit User</option>\n            </select>\n            <input\n              type=\"text\"\n              name=\"redditData\"\n              value={this.state.redditData}\n              onChange={this.onChange}\n              placeholder=\"Example: webdev\"\n              className=\"reddit-input\"\n            />\n            <button\n              className=\"submit-button\"\n              type=\"submit\"\n              disabled={this.state.loading}\n            >\n              {this.state.loading ? `Fetching Data` : `Generate Wordcloud`}\n            </button>\n          </form>\n          <p className=\"error\">\n            {!this.state.error\n              ? ''\n              : `Darn! No data available for this request. Try submitting another request.`}\n          </p>\n        </header>\n        <section className=\"app-section\">\n          <div className=\"container\">\n            {!this.state.words ? (\n              <h2>\n                Submit a {this.state.redditSelect} to generate a wordcloud\n              </h2>\n            ) : (\n              <ReactWordcloud options={options} words={this.state.words} />\n            )}\n          </div>\n        </section>\n        <footer>\n          Created by{' '}\n          <a\n            href=\"https://www.jon-funk.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Jonathan Funk\n          </a>\n          .{' '}\n          <a\n            href=\"https://github.com/jonathanfunk/reddit-wordcloud-generator\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Project Repo\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}